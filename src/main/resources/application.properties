# Application Configuration
spring.application.name=teamlogger-backend
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/teamlogger?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# Security Configuration
jwt.secret=teamloggerSecretKey2024ForJWTTokenGenerationAndValidation
jwt.expiration=86400000

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your-email@gmail.com
spring.mail.password=your-app-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Cloudinary Configuration
cloudinary.cloud-name=your-cloud-name
cloudinary.api-key=your-api-key
cloudinary.api-secret=your-api-secret

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Logging Configuration
logging.level.com.teamlogger.backend=DEBUG
logging.level.org.springframework.security=DEBUG

# Quartz Scheduler Configuration
spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.initialize-schema=always
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=20000
spring.quartz.properties.org.quartz.jobStore.misfireThreshold=60000
spring.quartz.properties.org.quartz.jobStore.txIsolationLevelSerializable=true
spring.quartz.properties.org.quartz.jobStore.selectWithLockSQL=SELECT * FROM {0}LOCKS UPDLOCK WHERE LOCK_NAME = ?
spring.quartz.properties.org.quartz.jobStore.txIsolationLevelSerializable=true
spring.quartz.properties.org.quartz.jobStore.acquireTriggersWithinLock=true
spring.quartz.properties.org.quartz.jobStore.lockHandler.class=org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
spring.quartz.properties.org.quartz.jobStore.lockHandler.updateLockRowSQL=UPDATE {0}LOCKS SET LOCK_OWNER = ? WHERE LOCK_NAME = ? AND LOCK_OWNER = ?
spring.quartz.properties.org.quartz.jobStore.lockHandler.obtainLockSQL=SELECT * FROM {0}LOCKS WHERE LOCK_NAME = ? FOR UPDATE
spring.quartz.properties.org.quartz.jobStore.lockHandler.releaseLockSQL=UPDATE {0}LOCKS SET LOCK_OWNER = ? WHERE LOCK_NAME = ? AND LOCK_OWNER = ?
spring.quartz.properties.org.quartz.jobStore.lockHandler.deleteLockSQL=DELETE FROM {0}LOCKS WHERE LOCK_NAME = ?

# CORS Configuration
cors.allowed-origins=http://localhost:3000,http://localhost:8080
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Screenshot Configuration
screenshot.interval=300000
screenshot.enabled=true
screenshot.quality=0.8

# Time Tracking Configuration
time-tracking.idle-threshold=300000
time-tracking.break-threshold=900000
time-tracking.overtime-threshold=28800000
